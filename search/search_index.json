{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Introduction This is project contains several samples for mappMotion. The samples are broken up in branches to focus on a single function at a time. The main branch has a base example with some basic motion functions. This main sample is then expanded to the specific function. The description for each function has a link to the branch used. Download To download a specific sample follow these steps: This sample can run in simulation mode (http://127.0.0.1:81/). Help Many sample have Automation Studio help file references. To jump to this references copy and paste the code into help like this: Requirements Automation Studio 4.12 mappView 5.22 mappServices 5.22","title":"Start"},{"location":"index.html#introduction","text":"This is project contains several samples for mappMotion. The samples are broken up in branches to focus on a single function at a time. The main branch has a base example with some basic motion functions. This main sample is then expanded to the specific function. The description for each function has a link to the branch used.","title":"Introduction"},{"location":"index.html#download","text":"To download a specific sample follow these steps: This sample can run in simulation mode (http://127.0.0.1:81/).","title":"Download"},{"location":"index.html#help","text":"Many sample have Automation Studio help file references. To jump to this references copy and paste the code into help like this:","title":"Help"},{"location":"index.html#requirements","text":"Automation Studio 4.12 mappView 5.22 mappServices 5.22","title":"Requirements"},{"location":"revision.html","text":"26.05.2023 axis_cfg version 1 motor_cfg version 2 par_id version 2 brake version 2 20.05.2023 First public release","title":"Revision"},{"location":"revision.html#26052023","text":"axis_cfg version 1 motor_cfg version 2 par_id version 2 brake version 2","title":"26.05.2023"},{"location":"revision.html#20052023","text":"First public release","title":"20.05.2023"},{"location":"structure.html","text":"All functions are collected in the axis prototype package. The proto type package consists of a common part and the axis function that is demonstrated. The common part contains code and variables that are used in multiple examples. Each axis function is build in way that it can be used independently from other functions. Each axis function comes with its own variable and type definitions. All code is in structure text language and encapsulated in an action. Adding a function to a task To add a function to a specific task follow this procedure. The folder AxisProto contains all files necessary for the specific function. In the first project you can copy the entire AxisProto folder from the sample project into your project. For additional functions just copy the folder for new axis function (Brake) into the existing AxisProto folder. It is recommended to reference the files from the AxisProto type folder to your task instead of making copy. A reference makes it easier to update the files in the future. All axis functions communicate to the outside world through a structure. Most functions need some initial parameters, for example the axis reference MpLink. This code can be executed in the _INIT of the task. The action that drives the function is then called in the _CYLCIC part of the task. Coding guidelines Here are some general coding guidelines used to develop the samples. All axis functions come with its own type and variable declaration and code file. All variables names must be unique because all variables are shared within one task in the end. All function specific variables should therefore start with function name itself. For example the state machine variable for the AxisBrake function is called AxisBrakeState. The only allowed dependency to other modules is to the common module. All data exchange is done through one structure. The structure for the data exchange follows the following guidelines Description Notation A command that triggers an action Cmd{Get|Set}{What} Example: CmdSetMotor mappMotion axis reference MpLink Parameter or configuration values. Parameters can be two directional but it is recommended to see parameters as write only. Par{What} Example: ParMotorSynchronous Status values are read only and are only changed by the prototype code. Sta{What} Example: StaMotorSynchronous Error code ErrID","title":"Structure"},{"location":"structure.html#adding-a-function-to-a-task","text":"To add a function to a specific task follow this procedure. The folder AxisProto contains all files necessary for the specific function. In the first project you can copy the entire AxisProto folder from the sample project into your project. For additional functions just copy the folder for new axis function (Brake) into the existing AxisProto folder. It is recommended to reference the files from the AxisProto type folder to your task instead of making copy. A reference makes it easier to update the files in the future. All axis functions communicate to the outside world through a structure. Most functions need some initial parameters, for example the axis reference MpLink. This code can be executed in the _INIT of the task. The action that drives the function is then called in the _CYLCIC part of the task.","title":"Adding a function to a task"},{"location":"structure.html#coding-guidelines","text":"Here are some general coding guidelines used to develop the samples. All axis functions come with its own type and variable declaration and code file. All variables names must be unique because all variables are shared within one task in the end. All function specific variables should therefore start with function name itself. For example the state machine variable for the AxisBrake function is called AxisBrakeState. The only allowed dependency to other modules is to the common module. All data exchange is done through one structure. The structure for the data exchange follows the following guidelines Description Notation A command that triggers an action Cmd{Get|Set}{What} Example: CmdSetMotor mappMotion axis reference MpLink Parameter or configuration values. Parameters can be two directional but it is recommended to see parameters as write only. Par{What} Example: ParMotorSynchronous Status values are read only and are only changed by the prototype code. Sta{What} Example: StaMotorSynchronous Error code ErrID","title":"Coding guidelines"},{"location":"template.html","text":"The brake sample provides an easy interface to control the brake parameters and function. Also see Automation Studio help (00ef9572-f1d5-43b5-9815-90e510eaeb7f) Repo Link Here is the link to the repository. Command structure The sample uses a variable structure to communicate with the outside world that can also be used to interact with other tasks. The structure looks as follows: Command Function CmdClose Close brake programm structure Revision Version 1 - First release","title":"Template"},{"location":"template.html#repo-link","text":"Here is the link to the repository.","title":"Repo Link"},{"location":"template.html#command-structure","text":"The sample uses a variable structure to communicate with the outside world that can also be used to interact with other tasks. The structure looks as follows: Command Function CmdClose Close brake","title":"Command structure"},{"location":"template.html#programm-structure","text":"","title":"programm structure"},{"location":"template.html#revision","text":"Version 1 - First release","title":"Revision"},{"location":"axis_cfg/axis_cfg.html","text":"The axis configuration sample provides an example how to change a axis configuration during runtime. After changing the axis parameters the PLC must be reboot for the changes to take affect. Also see Automation Studio help for a description of MC_BR_ProcessConfig (9c2eadae-8494-4e9a-b305-0afa2dabf1d4) Repo Link Here is the link to the repository. Command structure The sample uses a variable structure to communicate with the outside world that can also be used to interact with other tasks. The structure looks as follows: Command Function CmdSetAxis Set the new axis parameters CmdGetAxis Get the active axis parameters MpLink The axis reference establishes the connection between the function block and an axis ParAxis Axis parameters for set command StaAxis Axis parameters get command ErrId Error ID Program structure The program consists of a state machine to execute the commands. The B&R function block that changed the axis configuration needs a name path and not just the MpLink. This name is constructed automatically in the step STATE_AXIS_CFG_PRE_SET. From this step the state machine goes to the read or write state. The axis parameter can be provided as a separate file or action (see example). It is also possible to set the parameters directly in the structure ParAxis. After changing the axis parameters the PLC must be reboot for the changes to take affect. Sample code Here is a sample snippet that can be used as a starting point. Program init PROGRAM _INIT // -------------------------------------------------------------------------- // Axis configuration AxisCfg.MpLink := ADR(gAxis_1); // MpLink for axis AxisConfigSample; // Axis sample configuration END_PROGRAM Program cyclic PROGRAM _CYCLIC // -------------------------------------------------------------------------- // Call axis actions used for this drive CommonAction; // Includes the reboot command AxisCfgAction; // Call axis configuration code END_PROGRAM Revision Version 1 - First release","title":"Axis Configuration"},{"location":"axis_cfg/axis_cfg.html#repo-link","text":"Here is the link to the repository.","title":"Repo Link"},{"location":"axis_cfg/axis_cfg.html#command-structure","text":"The sample uses a variable structure to communicate with the outside world that can also be used to interact with other tasks. The structure looks as follows: Command Function CmdSetAxis Set the new axis parameters CmdGetAxis Get the active axis parameters MpLink The axis reference establishes the connection between the function block and an axis ParAxis Axis parameters for set command StaAxis Axis parameters get command ErrId Error ID","title":"Command structure"},{"location":"axis_cfg/axis_cfg.html#program-structure","text":"The program consists of a state machine to execute the commands. The B&R function block that changed the axis configuration needs a name path and not just the MpLink. This name is constructed automatically in the step STATE_AXIS_CFG_PRE_SET. From this step the state machine goes to the read or write state. The axis parameter can be provided as a separate file or action (see example). It is also possible to set the parameters directly in the structure ParAxis. After changing the axis parameters the PLC must be reboot for the changes to take affect.","title":"Program structure"},{"location":"axis_cfg/axis_cfg.html#sample-code","text":"Here is a sample snippet that can be used as a starting point.","title":"Sample code"},{"location":"axis_cfg/axis_cfg.html#program-init","text":"PROGRAM _INIT // -------------------------------------------------------------------------- // Axis configuration AxisCfg.MpLink := ADR(gAxis_1); // MpLink for axis AxisConfigSample; // Axis sample configuration END_PROGRAM","title":"Program init"},{"location":"axis_cfg/axis_cfg.html#program-cyclic","text":"PROGRAM _CYCLIC // -------------------------------------------------------------------------- // Call axis actions used for this drive CommonAction; // Includes the reboot command AxisCfgAction; // Call axis configuration code END_PROGRAM","title":"Program cyclic"},{"location":"axis_cfg/axis_cfg.html#revision","text":"Version 1 - First release","title":"Revision"},{"location":"brake/brake.html","text":"The brake sample provides an easy interface to control the brake parameters and function. Also see Automation Studio help (00ef9572-f1d5-43b5-9815-90e510eaeb7f) for a description of MC_BR_BrakeTest_AcpAx Repo Link Here is the link to the repository. Command structure The sample uses a variable structure to communicate with the outside world that can also be used to interact with other tasks. The structure looks as follows: Command Function CmdClose Close brake CmdOpen Open brake CmdSetPar Set brake parameter MpLink The axis reference establishes the connection between the function block and an axis ParBrake Configuration parameters StaBrake Configuration parameters ErrId Error ID Program structure The program consists of a state machine where the commands are executed. When a brake open or close command is executed the status of the brake is checked in an additional step. Sample code Here is a sample snippet that can be used as a starting point. Program init PROGRAM _INIT // -------------------------------------------------------------------------- // Set brake parameters, disable brake restrictions AxisBrake.MpLink := ADR(gAxis_1); // MpLink reference for axis AxisBrake.ParBrake.RestrictedBrakeControl := mcSWITCH_OFF; // Allow brake to be turned off AxisBrake.CmdSetPar := TRUE; // Call parameter set command END_PROGRAM Program cyclic PROGRAM _CYCLIC // -------------------------------------------------------------------------- // Call axis actions used for this drive BrakeAction; END_PROGRAM Revision Version 2 - Renamed action Version 1 - First release","title":"Brake"},{"location":"brake/brake.html#repo-link","text":"Here is the link to the repository.","title":"Repo Link"},{"location":"brake/brake.html#command-structure","text":"The sample uses a variable structure to communicate with the outside world that can also be used to interact with other tasks. The structure looks as follows: Command Function CmdClose Close brake CmdOpen Open brake CmdSetPar Set brake parameter MpLink The axis reference establishes the connection between the function block and an axis ParBrake Configuration parameters StaBrake Configuration parameters ErrId Error ID","title":"Command structure"},{"location":"brake/brake.html#program-structure","text":"The program consists of a state machine where the commands are executed. When a brake open or close command is executed the status of the brake is checked in an additional step.","title":"Program structure"},{"location":"brake/brake.html#sample-code","text":"Here is a sample snippet that can be used as a starting point.","title":"Sample code"},{"location":"brake/brake.html#program-init","text":"PROGRAM _INIT // -------------------------------------------------------------------------- // Set brake parameters, disable brake restrictions AxisBrake.MpLink := ADR(gAxis_1); // MpLink reference for axis AxisBrake.ParBrake.RestrictedBrakeControl := mcSWITCH_OFF; // Allow brake to be turned off AxisBrake.CmdSetPar := TRUE; // Call parameter set command END_PROGRAM","title":"Program init"},{"location":"brake/brake.html#program-cyclic","text":"PROGRAM _CYCLIC // -------------------------------------------------------------------------- // Call axis actions used for this drive BrakeAction; END_PROGRAM","title":"Program cyclic"},{"location":"brake/brake.html#revision","text":"Version 2 - Renamed action Version 1 - First release","title":"Revision"},{"location":"motor_cfg/motor_cfg.html","text":"The motor configuration sample provides an example how to change a motor during runtime. If there is no preferred motor during development or the motor parameters are unknown the motor type \"MotorSynchronous_any\" or \"MotorInduction_any\" can be used in the hardware tree. After changing the motor parameters the PLC must be reboot for the changes to take affect. Also see Automation Studio help for a description of MC_BR_ProcessConfig (9c2eadae-8494-4e9a-b305-0afa2dabf1d4) Conversion list of synchronous motor parameters Conversion list of induction motor parameters Repo Link Here is the link to the repository. Command structure The sample uses a variable structure to communicate with the outside world that can also be used to interact with other tasks. The structure looks as follows: Command Function CmdSetMotor Set the new motor parameters CmdGetMotor Get the active motor parameters MpLink The axis reference establishes the connection between the function block and an axis ParMotorType There are two types of possible motor configuration. Use AX_MOTOR_TYPE_SYNCHRONOUS for synchronous motors and AX_MOTOR_TYPE_INDUCTION for induction motors ParMotorSynchronous Parameters for synchronous motor for set command StaMotorSynchronous Parameters for synchronous motor for get command ParMotorInduction Parameters for induction motor for set command StaMotorInduction Parameters for induction motor for get command ErrId Error ID Program structure The program consists of a state machine to execute the commands. The B&R function block that changed the motor configuration needs a name path and not just the MpLink. This name is constructed automatically in the step STATE_MOTOR_CFG_PRE_SET. From this step the state machine goes to the read or write state. The motor parameter can be provided as a separate file and action (see example). It is also possible to set the parameters directly in the structure ParMotorSynchronous or StaMotorInduction. After changing the motor parameters the PLC must be reboot for the changes to take affect. Sample code Here is a sample snippet that can be used as a starting point. Program init PROGRAM _INIT // -------------------------------------------------------------------------- // Motor configuration AxisMotorCfg.MpLink := ADR(gAxis_1); // MpLink for axis AxisMotorCfg.ParMotorType := AX_MOTOR_TYPE_SYNCHRONOUS; // Use AX_MOTOR_TYPE_SYNCHRONOUS for synchronous motors and AX_MOTOR_TYPE_INDUCTION for induction motors Motor_8LVB13_B1030F300_00; // This action contains the new motor parameters (see additional file with the same name) END_PROGRAM Program cyclic PROGRAM _CYCLIC // -------------------------------------------------------------------------- // Call axis actions used for this drive CommonAction; // Includes the reboot command MotorCfgAction; // Call motor configuration code END_PROGRAM Revision Version 2 - Renamed action Version 1 - First release","title":"Motor Configuration"},{"location":"motor_cfg/motor_cfg.html#repo-link","text":"Here is the link to the repository.","title":"Repo Link"},{"location":"motor_cfg/motor_cfg.html#command-structure","text":"The sample uses a variable structure to communicate with the outside world that can also be used to interact with other tasks. The structure looks as follows: Command Function CmdSetMotor Set the new motor parameters CmdGetMotor Get the active motor parameters MpLink The axis reference establishes the connection between the function block and an axis ParMotorType There are two types of possible motor configuration. Use AX_MOTOR_TYPE_SYNCHRONOUS for synchronous motors and AX_MOTOR_TYPE_INDUCTION for induction motors ParMotorSynchronous Parameters for synchronous motor for set command StaMotorSynchronous Parameters for synchronous motor for get command ParMotorInduction Parameters for induction motor for set command StaMotorInduction Parameters for induction motor for get command ErrId Error ID","title":"Command structure"},{"location":"motor_cfg/motor_cfg.html#program-structure","text":"The program consists of a state machine to execute the commands. The B&R function block that changed the motor configuration needs a name path and not just the MpLink. This name is constructed automatically in the step STATE_MOTOR_CFG_PRE_SET. From this step the state machine goes to the read or write state. The motor parameter can be provided as a separate file and action (see example). It is also possible to set the parameters directly in the structure ParMotorSynchronous or StaMotorInduction. After changing the motor parameters the PLC must be reboot for the changes to take affect.","title":"Program structure"},{"location":"motor_cfg/motor_cfg.html#sample-code","text":"Here is a sample snippet that can be used as a starting point.","title":"Sample code"},{"location":"motor_cfg/motor_cfg.html#program-init","text":"PROGRAM _INIT // -------------------------------------------------------------------------- // Motor configuration AxisMotorCfg.MpLink := ADR(gAxis_1); // MpLink for axis AxisMotorCfg.ParMotorType := AX_MOTOR_TYPE_SYNCHRONOUS; // Use AX_MOTOR_TYPE_SYNCHRONOUS for synchronous motors and AX_MOTOR_TYPE_INDUCTION for induction motors Motor_8LVB13_B1030F300_00; // This action contains the new motor parameters (see additional file with the same name) END_PROGRAM","title":"Program init"},{"location":"motor_cfg/motor_cfg.html#program-cyclic","text":"PROGRAM _CYCLIC // -------------------------------------------------------------------------- // Call axis actions used for this drive CommonAction; // Includes the reboot command MotorCfgAction; // Call motor configuration code END_PROGRAM","title":"Program cyclic"},{"location":"motor_cfg/motor_cfg.html#revision","text":"Version 2 - Renamed action Version 1 - First release","title":"Revision"},{"location":"par_id/par_id.html","text":"The par ID sample provides an easy interface to control the ACOPOS parameter IDs. Also see Automation Studio help (64f032b8-d12d-4fdf-a118-179256305dcf) for a complete list of parameter IDs. (89221e8a-e9dd-427b-a12b-2b75d6f5fe83) for a description of MC_BR_ProcessParID_AcpAx Repo Link Here is the link to the repository. Command structure The sample uses a variable structure to communicate with the outside world that can also be used to interact with other tasks. The structure looks as follows: Command Function CmdSetPar Set the parameter IDs from the list ParIds CmdGetPar Get the parameter IDs from the list ParIds MpLink The axis reference establishes the connection between the function block and an axis ParIds Array of parameters IDs, variable addresses and data types ParNum Number of parameter IDs that are used within array ErrId Error ID Program structure The program consists of a a simple clause that executes the two commands. The sample provides the following predefined variables that can be used to read or write parameters IDs. mcACPAX_BOOL mcACPAX_SINT mcACPAX_INT mcACPAX_DINT mcACPAX_USINT mcACPAX_UINT mcACPAX_UDINT mcACPAX_REAL Sample code Here is a sample snippet that can be used as a starting point. Program init PROGRAM _INIT // -------------------------------------------------------------------------- // Acknowledge encoder battery error mcACPAX_UDINT[1] := 1; // Par ID value: Reset encoder error AxisParId.MpLink := ADR(gAxis_1); // MpLink for axis AxisParId.ParNum := 1; // Number of parameter IDs AxisParId.ParIds[1].ParID := 719; // Encoder1: Encoder command AxisParId.ParIds[1].VariableAddress := ADR(mcACPAX_UDINT[1]); // Pointer to predefined variable AxisParId.ParIds[1].DataType := mcACPAX_PARTYPE_UDINT; // Data type of predefined variable AxisParId.CmdSetPar := TRUE; // Execute command END_PROGRAM Program cyclic PROGRAM _CYCLIC // -------------------------------------------------------------------------- // Call axis actions used for this drive CommonAction; ParIDAction; END_PROGRAM Revision Version 2 - Renamed action Version 1 - First release","title":"Par ID"},{"location":"par_id/par_id.html#repo-link","text":"Here is the link to the repository.","title":"Repo Link"},{"location":"par_id/par_id.html#command-structure","text":"The sample uses a variable structure to communicate with the outside world that can also be used to interact with other tasks. The structure looks as follows: Command Function CmdSetPar Set the parameter IDs from the list ParIds CmdGetPar Get the parameter IDs from the list ParIds MpLink The axis reference establishes the connection between the function block and an axis ParIds Array of parameters IDs, variable addresses and data types ParNum Number of parameter IDs that are used within array ErrId Error ID","title":"Command structure"},{"location":"par_id/par_id.html#program-structure","text":"The program consists of a a simple clause that executes the two commands. The sample provides the following predefined variables that can be used to read or write parameters IDs. mcACPAX_BOOL mcACPAX_SINT mcACPAX_INT mcACPAX_DINT mcACPAX_USINT mcACPAX_UINT mcACPAX_UDINT mcACPAX_REAL","title":"Program structure"},{"location":"par_id/par_id.html#sample-code","text":"Here is a sample snippet that can be used as a starting point.","title":"Sample code"},{"location":"par_id/par_id.html#program-init","text":"PROGRAM _INIT // -------------------------------------------------------------------------- // Acknowledge encoder battery error mcACPAX_UDINT[1] := 1; // Par ID value: Reset encoder error AxisParId.MpLink := ADR(gAxis_1); // MpLink for axis AxisParId.ParNum := 1; // Number of parameter IDs AxisParId.ParIds[1].ParID := 719; // Encoder1: Encoder command AxisParId.ParIds[1].VariableAddress := ADR(mcACPAX_UDINT[1]); // Pointer to predefined variable AxisParId.ParIds[1].DataType := mcACPAX_PARTYPE_UDINT; // Data type of predefined variable AxisParId.CmdSetPar := TRUE; // Execute command END_PROGRAM","title":"Program init"},{"location":"par_id/par_id.html#program-cyclic","text":"PROGRAM _CYCLIC // -------------------------------------------------------------------------- // Call axis actions used for this drive CommonAction; ParIDAction; END_PROGRAM","title":"Program cyclic"},{"location":"par_id/par_id.html#revision","text":"Version 2 - Renamed action Version 1 - First release","title":"Revision"},{"location":"refs/refs_motor_conv_ind.html","text":"Conversion table for Induction motors The conversion table was created to the best of our knowledge but there is no guaranty that it is 100% correct. Please double check critical values in the Automation Studio help before using them. If you find any errors or have any suggestions please create an issue on github. The table uses the following notation: The configuration column shows the Automation Studio configuration. Each branch in the tree is presented as a list. For example the value shown in the left picture is written as: Induction Motor Number of pole pairs The structure column shows the same value in code. Each element of the structure is presented as a list. For example the value shown in the left picture is written as: Motor PowerRatingPlate NumberOfPolePairs Switching PTC thermistor Configuration name Structure name Constant Par ID Note Induction Motor Nominal speed Motor PowerRatingPlate NominalSpeed MOTOR_SPEED_RATED 50 Power rating plate Induction Motor Nominal frequency Motor PowerRatingPlate NominalFrequency MOTOR_FREQ_RATED Power rating plate Induction Motor Nominal voltage Motor PowerRatingPlate NominalVoltage MOTOR_VOLTAGE_RATED 48 Power rating plate Induction Motor Nominal current Motor PowerRatingPlate NominalCurrent MOTOR_CURR_RATED 57 Power rating plate Induction Motor Power Factor Motor PowerRatingPlate PowerFactor MOTOR_POWER_FACTOR Power rating plate Induction Motor Nominal ambient temperature Motor PowerRatingPlate NominalAmbientTemperature MOTOR_AMB_TEMP_RATED 865 Induction Motor Optional Parameters Number of pole pairs Motor PowerRatingPlate OptionalParameter NumberOfPolePairs MOTOR_POLEPAIRS 47 Power rating plate Induction Motor Optional Parameters Maximum speed Motor PowerRatingPlate OptionalParameter MaximumSpeed MOTOR_SPEED_MAX 51 Power rating plate Induction Motor Optional Parameters Stall current Motor PowerRatingPlate OptionalParameter StallCurrent MOTOR_CURR_STALL 56 Power rating plate Induction Motor Optional Parameters Peak current Motor PowerRatingPlate OptionalParameter PeakCurrent MOTOR_CURR_MAX 58 Power rating plate Induction Motor Optional Parameters Magnetizing current Motor PowerRatingPlate OptionalParameter MagnetizingCurrent MOTOR_MAGNETIZING_CURR 59 Power rating plate Induction Motor Optional Parameters Nominal Power Motor PowerRatingPlate OptionalParameter NominalPower MOTOR_POWER_RATED Power rating plate Induction Motor Optional Parameters Nominal torque Motor PowerRatingPlate OptionalParameter NominalTorque MOTOR_TORQ_RATED 53 Power rating plate Induction Motor Optional Parameters Stall torque Motor PowerRatingPlate OptionalParameter StallTorque MOTOR_TORQ_STALL 52 Power rating plate Induction Motor Optional Parameters Peak torque Motor PowerRatingPlate OptionalParameter PeakTorque MOTOR_TORQ_MAX 54 Power rating plate Induction Motor Optional Parameters Moment of inertia Motor PowerRatingPlate OptionalParameter MomentOfInertia MOTOR_INERTIA 62 Power rating plate Value is now in kgcm^2 Induction Motor Nominal speed Motor StarEquivalentCircuit NominalSpeed MOTOR_SPEED_RATED 50 Start equivalent circuit Induction Motor Maximum speed Motor StarEquivalentCircuit MaximumSpeed MOTOR_SPEED_MAX 51 Start equivalent circuit Induction Motor Nominal voltage Motor StarEquivalentCircuit NominalVoltage MOTOR_VOLTAGE_RATED 48 Start equivalent circuit Induction Motor Nominal current Motor StarEquivalentCircuit NominalCurrent MOTOR_CURR_RATED 57 Start equivalent circuit Induction Motor Stall current Motor StarEquivalentCircuit StallCurrent MOTOR_CURR_STALL 56 Start equivalent circuit Induction Motor Peak current Motor StarEquivalentCircuit PeakCurrent MOTOR_CURR_MAX 58 Start equivalent circuit Induction Motor Magnetizing current Motor StarEquivalentCircuit MagnetizingCurrent MOTOR_MAGNETIZING_CURR 59 Start equivalent circuit Induction Motor Nominal torque Motor StarEquivalentCircuit NominalTorque MOTOR_TORQ_RATED 53 Start equivalent circuit Induction Motor Stall torque Motor StarEquivalentCircuit StallTorque MOTOR_TORQ_STALL 52 Start equivalent circuit Induction Motor Peak torque Motor StarEquivalentCircuit PeakTorque MOTOR_TORQ_MAX 54 Start equivalent circuit Induction Motor Stator resistance Motor StarEquivalentCircuit StatorResistance MOTOR_STATOR_RESISTANCE 60 Start equivalent circuit Induction Motor Rotor resistance Motor StarEquivalentCircuit RotorResistance MOTOR_ROTOR_RESISTANCE 76 Start equivalent circuit Induction Motor Stator inductance Motor StarEquivalentCircuit StatorInductance MOTOR_STATOR_INDUCTANCE 61 Start equivalent circuit Induction Motor Rotor inductance Motor StarEquivalentCircuit RotorInductance MOTOR_ROTOR_INDUCTANCE 77 Start equivalent circuit Induction Motor Mutual inductance Motor StarEquivalentCircuit MutualInductance MOTOR_MUTUAL_INDUCTANCE 78 Start equivalent circuit Induction Motor Moment of inertia Motor StarEquivalentCircuit MomentOfInertia MOTOR_INERTIA 62 Start equivalent circuit Value is no in kgcm^2 Induction Motor Nominal ambient temperature Motor StarEquivalentCircuit NominalAmbientTemperature MOTOR_AMB_TEMP_RATED 865 Induction Motor Voltage limitation Maximum DC bus voltage Motor StarEquivalentCircuit VoltageLimitation Used MaximumDCBusVoltage MOTOR_UDC_MAX 1641 Start equivalent circuit Induction Motor Temperature sensor Limit temperature Motor PowerRatingPlate TemperatureSensor Thermistor LimitTemperature MOTOR_TEMPSENS_LIM 1216 Thermistor Induction Motor Temperature sensor Temperature sensor interface Motor PowerRatingPlate TemperatureSensor Thermistor TemperatureSensorInterface Thermistor Induction Motor Temperature sensor ResistanceR0 Motor PowerRatingPlate TemperatureSensor Thermistor ResistanceR0 MOTOR_TEMPSENS_PAR1 64 Thermistor Induction Motor Temperature sensor ResistanceR7 Motor PowerRatingPlate TemperatureSensor Thermistor ResistanceR7 MOTOR_TEMPSENS_PAR2 65 Thermistor Induction Motor Temperature sensor TemperatureT0 Motor PowerRatingPlate TemperatureSensor Thermistor TemperatureT0 MOTOR_TEMPSENS_PAR3 66 Thermistor Induction Motor Temperature sensor TemperatureT1 Motor PowerRatingPlate TemperatureSensor Thermistor TemperatureT1 MOTOR_TEMPSENS_PAR4 67 Thermistor Induction Motor Temperature sensor TemperatureT2 Motor PowerRatingPlate TemperatureSensor Thermistor TemperatureT2 MOTOR_TEMPSENS_PAR5 68 Thermistor Induction Motor Temperature sensor TemperatureT3 Motor PowerRatingPlate TemperatureSensor Thermistor TemperatureT3 MOTOR_TEMPSENS_PAR6 69 Thermistor Induction Motor Temperature sensor TemperatureT4 Motor PowerRatingPlate TemperatureSensor Thermistor TemperatureT4 MOTOR_TEMPSENS_PAR7 70 Thermistor Induction Motor Temperature sensor TemperatureT5 Motor PowerRatingPlate TemperatureSensor Thermistor TemperatureT5 MOTOR_TEMPSENS_PAR8 71 Thermistor Induction Motor Temperature sensor TemperatureT6 Motor PowerRatingPlate TemperatureSensor Thermistor TemperatureT6 MOTOR_TEMPSENS_PAR9 72 Thermistor Induction Motor Temperature sensor TemperatureT7 Motor PowerRatingPlate TemperatureSensor Thermistor TemperatureT7 MOTOR_TEMPSENS_PAR10 73 Thermistor Induction Motor Temperature sensor Temperature sensor interface Motor PowerRatingPlate TemperatureSensor Thermistor TemperatureSensorInterface Switching PTC thermistor Induction Motor Temperature sensor Nominal response resistance Motor PowerRatingPlate TemperatureSensor SwitchingPTCThermistor NominalResponseTemperature MOTOR_TEMPSENS_PAR1 64 Switching PTC thermistor Induction Motor Temperature sensor Minimum resistance Motor PowerRatingPlate TemperatureSensor SwitchingPTCThermistor MinimumResistance MOTOR_TEMPSENS_PAR2 65 Switching PTC thermistor Induction Motor Temperature sensor TemperaNominal response temperature Motor PowerRatingPlate TemperatureSensor SwitchingPTCThermistor NominalResponseTemperature MOTOR_TEMPSENS_PAR3 66 Switching PTC thermistor Induction Motor Temperature sensor Temperature sensor interface Motor PowerRatingPlate TemperatureSensor Thermoswitches TemperatureSensorInterface Thermoswitches Induction Motor Temperature sensor Nominal response resistance Motor PowerRatingPlate TemperatureSensor Thermoswitches NominalResponseTemperature MOTOR_TEMPSENS_PAR1 64 Thermoswitches Induction Motor Temperature sensor Minimum resistance Motor PowerRatingPlate TemperatureSensor Thermoswitches SwitchingStateOnOvertemperature MOTOR_TEMPSENS_PAR10 73 Thermoswitches Induction Motor Temperature model Current-based Limit temperature Motor PowerRatingPlate TemperatureModel CurrentBased LimitTemperature MOTOR_WIND_TEMP_MAX 74 Current-based Induction Motor Temperature model Current-based Winding cross section Motor PowerRatingPlate TemperatureModel CurrentBased WindingCrossSection MOTOR_WIND_CROSS_SECT 59 Current-based Induction Motor Temperature model Current-based Thermal tripping time Motor PowerRatingPlate TemperatureModel CurrentBased ThermalTrippingTime PIDENT_THERM_TRIP_TIME 1283 Current-based Induction Motor Temperature model Current-based Thermal time constant Motor PowerRatingPlate TemperatureModel CurrentBased ThermalTimeConstant MOTOR_TAU_THERM 849 Current-based Induction Motor Temperature model Current- and speed-based Limit temperature Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased LimitTemperature MOTOR_WIND_TEMP_MAX 74 Current- and speed-based Induction Motor Temperature model Current- and speed-based Calculation method Winding cross section Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod SecondOrderThermalNetwork WindingCrossSection MOTOR_WIND_CROSS_SECT 74 Current- and speed-based Second-order thermal network Induction Motor Temperature model Current- and speed-based Calculation method Thermal tripping time Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod SecondOrderThermalNetwork CalculationMethod SecondOrderThermalNetwork ThermalTrippingTime PIDENT_THERM_TRIP_TIME 1283 Current- and speed-based Second-order thermal network Induction Motor Temperature model Current- and speed-based Calculation method Thermal time constant Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod SecondOrderThermalNetwork ThermalTimeConstant MOTOR_TAU_THERM 849 Current- and speed-based Second-order thermal network Induction Motor Temperature model Current- and speed-based Calculation method Thermal resistance 1 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderThermalNetwork ThermalResistance1 MOTOR_TEMPMODEL_RES1 1211 Current- and speed-based Fourth-order thermal network Induction Motor Temperature model Current- and speed-based Calculation method Thermal capacity 1 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderThermalNetwork ThermalCapacity1 MOTOR_TEMPMODEL_CAP1 1212 Current- and speed-based Fourth-order thermal network Induction Motor Temperature model Current- and speed-based Calculation method Thermal resistance 2 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderThermalNetwork ThermalResistance2 MOTOR_TEMPMODEL_RES2 1213 Current- and speed-based Fourth-order thermal network Induction Motor Temperature model Current- and speed-based Calculation method Thermal capacity 2 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderThermalNetwork ThermalCapacity2 MOTOR_TEMPMODEL_CAP2 1214 Current- and speed-based Fourth-order thermal network Induction Motor Temperature model Current- and speed-based Calculation method Stator thermal loss 1 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderThermalNetwork StatorThermalLoss1 MOTOR_TEMPMODEL_LOSS1 1489 Current- and speed-based Fourth-order thermal network Induction Motor Temperature model Current- and speed-based Calculation method Stator thermal loss 2 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderThermalNetwork StatorThermalLoss2 MOTOR_TEMPMODEL_LOSS2 1489 Current- and speed-based Fourth-order thermal network Induction Motor Temperature model Current- and speed-based Calculation method Thermal resistance 1 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings ThermalResistance1 MOTOR_TEMPMODEL_RES1 1211 Current- and speed-based Fourth-order thermal network with couplings Induction Motor Temperature model Current- and speed-based Calculation method Thermal capacity 1 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings ThermalCapacity1 MOTOR_TEMPMODEL_CAP1 1212 Current- and speed-based Fourth-order thermal network with couplings Induction Motor Temperature model Current- and speed-based Calculation method Thermal resistance 2 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings ThermalResistance2 MOTOR_TEMPMODEL_RES2 1213 Current- and speed-based Fourth-order thermal network with couplings Induction Motor Temperature model Current- and speed-based Calculation method Thermal capacity 2 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings ThermalCapacity2 MOTOR_TEMPMODEL_CAP2 1214 Current- and speed-based Fourth-order thermal network with couplings Induction Motor Temperature model Current- and speed-based Calculation method Thermal resistance 3 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings ThermalResistance3 MOTOR_TEMPMODEL_RES3 1653 Current- and speed-based Fourth-order thermal network with couplings Induction Motor Temperature model Current- and speed-based Calculation method Stator thermal loss 1 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings StatorThermalLoss1 MOTOR_TEMPMODEL_LOSS1_W 1654 Current- and speed-based Fourth-order thermal network with couplings Induction Motor Temperature model Current- and speed-based Calculation method Stator thermal loss 2 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings StatorThermalLoss2 MOTOR_TEMPMODEL_LOSS2_W 1655 Current- and speed-based Fourth-order thermal network with couplings Induction Motor Temperature model Current- and speed-based Reference temperature Current- and speed-based Induction Brake Nominal current Brake Used NominalCurrent MOTOR_BRAKE_CURR_RATED 42 Induction Brake Nominal torque Brake Used NominalTorque MOTOR_BRAKE_TORQ_RATED 43 Induction Brake Activation delay Brake Used ActivationDelay MOTOR_BRAKE_ON_TIME 44 Induction Brake Release delay Brake Used ReleaseDelay MOTOR_BRAKE_OFF_TIME 45 Induction Brake Moment of inertia Brake Used MomentOfInertia MOTOR_BRAKE_INERTIA Induction Brake Control mode Brake Used ControlMode Voltage controlled Induction Brake Control mode Release voltage Brake Used ControlMode VoltageControlled ReleaseVoltage MOTOR_BRAKE_VOLT_REL 1504 Voltage controlled Induction Brake Control mode Hold voltage Brake Used ControlMode VoltageControlled HoldVoltage MOTOR_BRAKE_VOLT_HOLD 1505 Voltage controlled Induction Brake Limits Maximum voltage Brake Used Limits Used MaximumVoltage MOTOR_BRAKE_VOLT_MAX 1506 Voltage controlled Induction Encoder Proof of fatigue strength MOTOR_ENCOD_ATTR 652 Induction Encoder Moment of inertia Encoder Used MomentOfInertia MOTOR_ENCOD_INERTIA Induction Encoder Temperature sensor Limit temperature Encoder Used TemperatureSensor Used LimitTemperature MOTOR_ENCOD_TEMP_LIM 1209 Induction Gearbox Gear ratio input Gearbox Used GearRatio Only one value in code Induction Gearbox Gear ratio output Gearbox Used GearRatio Only one value in code Induction Gearbox Maximum input speed Gearbox Used MaximumInputSpeed MOTORGEAR_SPEED_MAX 1695 Induction Gearbox Nominal output torque Gearbox Used NominalOutputTorque MOTORGEAR_TORQ_NOM 1693 Induction Gearbox Peak output torque Gearbox Used PeakOutputTorque MOTORGEAR_TORQ_MAX 1694 Induction Gearbox Moment of inertia Gearbox Used MomentOfInertia MOTORGEAR_INERTIA","title":"Induction motor table conversion"},{"location":"refs/refs_motor_conv_ind.html#conversion-table-for-induction-motors","text":"The conversion table was created to the best of our knowledge but there is no guaranty that it is 100% correct. Please double check critical values in the Automation Studio help before using them. If you find any errors or have any suggestions please create an issue on github. The table uses the following notation: The configuration column shows the Automation Studio configuration. Each branch in the tree is presented as a list. For example the value shown in the left picture is written as: Induction Motor Number of pole pairs The structure column shows the same value in code. Each element of the structure is presented as a list. For example the value shown in the left picture is written as: Motor PowerRatingPlate NumberOfPolePairs Switching PTC thermistor Configuration name Structure name Constant Par ID Note Induction Motor Nominal speed Motor PowerRatingPlate NominalSpeed MOTOR_SPEED_RATED 50 Power rating plate Induction Motor Nominal frequency Motor PowerRatingPlate NominalFrequency MOTOR_FREQ_RATED Power rating plate Induction Motor Nominal voltage Motor PowerRatingPlate NominalVoltage MOTOR_VOLTAGE_RATED 48 Power rating plate Induction Motor Nominal current Motor PowerRatingPlate NominalCurrent MOTOR_CURR_RATED 57 Power rating plate Induction Motor Power Factor Motor PowerRatingPlate PowerFactor MOTOR_POWER_FACTOR Power rating plate Induction Motor Nominal ambient temperature Motor PowerRatingPlate NominalAmbientTemperature MOTOR_AMB_TEMP_RATED 865 Induction Motor Optional Parameters Number of pole pairs Motor PowerRatingPlate OptionalParameter NumberOfPolePairs MOTOR_POLEPAIRS 47 Power rating plate Induction Motor Optional Parameters Maximum speed Motor PowerRatingPlate OptionalParameter MaximumSpeed MOTOR_SPEED_MAX 51 Power rating plate Induction Motor Optional Parameters Stall current Motor PowerRatingPlate OptionalParameter StallCurrent MOTOR_CURR_STALL 56 Power rating plate Induction Motor Optional Parameters Peak current Motor PowerRatingPlate OptionalParameter PeakCurrent MOTOR_CURR_MAX 58 Power rating plate Induction Motor Optional Parameters Magnetizing current Motor PowerRatingPlate OptionalParameter MagnetizingCurrent MOTOR_MAGNETIZING_CURR 59 Power rating plate Induction Motor Optional Parameters Nominal Power Motor PowerRatingPlate OptionalParameter NominalPower MOTOR_POWER_RATED Power rating plate Induction Motor Optional Parameters Nominal torque Motor PowerRatingPlate OptionalParameter NominalTorque MOTOR_TORQ_RATED 53 Power rating plate Induction Motor Optional Parameters Stall torque Motor PowerRatingPlate OptionalParameter StallTorque MOTOR_TORQ_STALL 52 Power rating plate Induction Motor Optional Parameters Peak torque Motor PowerRatingPlate OptionalParameter PeakTorque MOTOR_TORQ_MAX 54 Power rating plate Induction Motor Optional Parameters Moment of inertia Motor PowerRatingPlate OptionalParameter MomentOfInertia MOTOR_INERTIA 62 Power rating plate Value is now in kgcm^2 Induction Motor Nominal speed Motor StarEquivalentCircuit NominalSpeed MOTOR_SPEED_RATED 50 Start equivalent circuit Induction Motor Maximum speed Motor StarEquivalentCircuit MaximumSpeed MOTOR_SPEED_MAX 51 Start equivalent circuit Induction Motor Nominal voltage Motor StarEquivalentCircuit NominalVoltage MOTOR_VOLTAGE_RATED 48 Start equivalent circuit Induction Motor Nominal current Motor StarEquivalentCircuit NominalCurrent MOTOR_CURR_RATED 57 Start equivalent circuit Induction Motor Stall current Motor StarEquivalentCircuit StallCurrent MOTOR_CURR_STALL 56 Start equivalent circuit Induction Motor Peak current Motor StarEquivalentCircuit PeakCurrent MOTOR_CURR_MAX 58 Start equivalent circuit Induction Motor Magnetizing current Motor StarEquivalentCircuit MagnetizingCurrent MOTOR_MAGNETIZING_CURR 59 Start equivalent circuit Induction Motor Nominal torque Motor StarEquivalentCircuit NominalTorque MOTOR_TORQ_RATED 53 Start equivalent circuit Induction Motor Stall torque Motor StarEquivalentCircuit StallTorque MOTOR_TORQ_STALL 52 Start equivalent circuit Induction Motor Peak torque Motor StarEquivalentCircuit PeakTorque MOTOR_TORQ_MAX 54 Start equivalent circuit Induction Motor Stator resistance Motor StarEquivalentCircuit StatorResistance MOTOR_STATOR_RESISTANCE 60 Start equivalent circuit Induction Motor Rotor resistance Motor StarEquivalentCircuit RotorResistance MOTOR_ROTOR_RESISTANCE 76 Start equivalent circuit Induction Motor Stator inductance Motor StarEquivalentCircuit StatorInductance MOTOR_STATOR_INDUCTANCE 61 Start equivalent circuit Induction Motor Rotor inductance Motor StarEquivalentCircuit RotorInductance MOTOR_ROTOR_INDUCTANCE 77 Start equivalent circuit Induction Motor Mutual inductance Motor StarEquivalentCircuit MutualInductance MOTOR_MUTUAL_INDUCTANCE 78 Start equivalent circuit Induction Motor Moment of inertia Motor StarEquivalentCircuit MomentOfInertia MOTOR_INERTIA 62 Start equivalent circuit Value is no in kgcm^2 Induction Motor Nominal ambient temperature Motor StarEquivalentCircuit NominalAmbientTemperature MOTOR_AMB_TEMP_RATED 865 Induction Motor Voltage limitation Maximum DC bus voltage Motor StarEquivalentCircuit VoltageLimitation Used MaximumDCBusVoltage MOTOR_UDC_MAX 1641 Start equivalent circuit Induction Motor Temperature sensor Limit temperature Motor PowerRatingPlate TemperatureSensor Thermistor LimitTemperature MOTOR_TEMPSENS_LIM 1216 Thermistor Induction Motor Temperature sensor Temperature sensor interface Motor PowerRatingPlate TemperatureSensor Thermistor TemperatureSensorInterface Thermistor Induction Motor Temperature sensor ResistanceR0 Motor PowerRatingPlate TemperatureSensor Thermistor ResistanceR0 MOTOR_TEMPSENS_PAR1 64 Thermistor Induction Motor Temperature sensor ResistanceR7 Motor PowerRatingPlate TemperatureSensor Thermistor ResistanceR7 MOTOR_TEMPSENS_PAR2 65 Thermistor Induction Motor Temperature sensor TemperatureT0 Motor PowerRatingPlate TemperatureSensor Thermistor TemperatureT0 MOTOR_TEMPSENS_PAR3 66 Thermistor Induction Motor Temperature sensor TemperatureT1 Motor PowerRatingPlate TemperatureSensor Thermistor TemperatureT1 MOTOR_TEMPSENS_PAR4 67 Thermistor Induction Motor Temperature sensor TemperatureT2 Motor PowerRatingPlate TemperatureSensor Thermistor TemperatureT2 MOTOR_TEMPSENS_PAR5 68 Thermistor Induction Motor Temperature sensor TemperatureT3 Motor PowerRatingPlate TemperatureSensor Thermistor TemperatureT3 MOTOR_TEMPSENS_PAR6 69 Thermistor Induction Motor Temperature sensor TemperatureT4 Motor PowerRatingPlate TemperatureSensor Thermistor TemperatureT4 MOTOR_TEMPSENS_PAR7 70 Thermistor Induction Motor Temperature sensor TemperatureT5 Motor PowerRatingPlate TemperatureSensor Thermistor TemperatureT5 MOTOR_TEMPSENS_PAR8 71 Thermistor Induction Motor Temperature sensor TemperatureT6 Motor PowerRatingPlate TemperatureSensor Thermistor TemperatureT6 MOTOR_TEMPSENS_PAR9 72 Thermistor Induction Motor Temperature sensor TemperatureT7 Motor PowerRatingPlate TemperatureSensor Thermistor TemperatureT7 MOTOR_TEMPSENS_PAR10 73 Thermistor Induction Motor Temperature sensor Temperature sensor interface Motor PowerRatingPlate TemperatureSensor Thermistor TemperatureSensorInterface Switching PTC thermistor Induction Motor Temperature sensor Nominal response resistance Motor PowerRatingPlate TemperatureSensor SwitchingPTCThermistor NominalResponseTemperature MOTOR_TEMPSENS_PAR1 64 Switching PTC thermistor Induction Motor Temperature sensor Minimum resistance Motor PowerRatingPlate TemperatureSensor SwitchingPTCThermistor MinimumResistance MOTOR_TEMPSENS_PAR2 65 Switching PTC thermistor Induction Motor Temperature sensor TemperaNominal response temperature Motor PowerRatingPlate TemperatureSensor SwitchingPTCThermistor NominalResponseTemperature MOTOR_TEMPSENS_PAR3 66 Switching PTC thermistor Induction Motor Temperature sensor Temperature sensor interface Motor PowerRatingPlate TemperatureSensor Thermoswitches TemperatureSensorInterface Thermoswitches Induction Motor Temperature sensor Nominal response resistance Motor PowerRatingPlate TemperatureSensor Thermoswitches NominalResponseTemperature MOTOR_TEMPSENS_PAR1 64 Thermoswitches Induction Motor Temperature sensor Minimum resistance Motor PowerRatingPlate TemperatureSensor Thermoswitches SwitchingStateOnOvertemperature MOTOR_TEMPSENS_PAR10 73 Thermoswitches Induction Motor Temperature model Current-based Limit temperature Motor PowerRatingPlate TemperatureModel CurrentBased LimitTemperature MOTOR_WIND_TEMP_MAX 74 Current-based Induction Motor Temperature model Current-based Winding cross section Motor PowerRatingPlate TemperatureModel CurrentBased WindingCrossSection MOTOR_WIND_CROSS_SECT 59 Current-based Induction Motor Temperature model Current-based Thermal tripping time Motor PowerRatingPlate TemperatureModel CurrentBased ThermalTrippingTime PIDENT_THERM_TRIP_TIME 1283 Current-based Induction Motor Temperature model Current-based Thermal time constant Motor PowerRatingPlate TemperatureModel CurrentBased ThermalTimeConstant MOTOR_TAU_THERM 849 Current-based Induction Motor Temperature model Current- and speed-based Limit temperature Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased LimitTemperature MOTOR_WIND_TEMP_MAX 74 Current- and speed-based Induction Motor Temperature model Current- and speed-based Calculation method Winding cross section Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod SecondOrderThermalNetwork WindingCrossSection MOTOR_WIND_CROSS_SECT 74 Current- and speed-based Second-order thermal network Induction Motor Temperature model Current- and speed-based Calculation method Thermal tripping time Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod SecondOrderThermalNetwork CalculationMethod SecondOrderThermalNetwork ThermalTrippingTime PIDENT_THERM_TRIP_TIME 1283 Current- and speed-based Second-order thermal network Induction Motor Temperature model Current- and speed-based Calculation method Thermal time constant Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod SecondOrderThermalNetwork ThermalTimeConstant MOTOR_TAU_THERM 849 Current- and speed-based Second-order thermal network Induction Motor Temperature model Current- and speed-based Calculation method Thermal resistance 1 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderThermalNetwork ThermalResistance1 MOTOR_TEMPMODEL_RES1 1211 Current- and speed-based Fourth-order thermal network Induction Motor Temperature model Current- and speed-based Calculation method Thermal capacity 1 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderThermalNetwork ThermalCapacity1 MOTOR_TEMPMODEL_CAP1 1212 Current- and speed-based Fourth-order thermal network Induction Motor Temperature model Current- and speed-based Calculation method Thermal resistance 2 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderThermalNetwork ThermalResistance2 MOTOR_TEMPMODEL_RES2 1213 Current- and speed-based Fourth-order thermal network Induction Motor Temperature model Current- and speed-based Calculation method Thermal capacity 2 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderThermalNetwork ThermalCapacity2 MOTOR_TEMPMODEL_CAP2 1214 Current- and speed-based Fourth-order thermal network Induction Motor Temperature model Current- and speed-based Calculation method Stator thermal loss 1 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderThermalNetwork StatorThermalLoss1 MOTOR_TEMPMODEL_LOSS1 1489 Current- and speed-based Fourth-order thermal network Induction Motor Temperature model Current- and speed-based Calculation method Stator thermal loss 2 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderThermalNetwork StatorThermalLoss2 MOTOR_TEMPMODEL_LOSS2 1489 Current- and speed-based Fourth-order thermal network Induction Motor Temperature model Current- and speed-based Calculation method Thermal resistance 1 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings ThermalResistance1 MOTOR_TEMPMODEL_RES1 1211 Current- and speed-based Fourth-order thermal network with couplings Induction Motor Temperature model Current- and speed-based Calculation method Thermal capacity 1 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings ThermalCapacity1 MOTOR_TEMPMODEL_CAP1 1212 Current- and speed-based Fourth-order thermal network with couplings Induction Motor Temperature model Current- and speed-based Calculation method Thermal resistance 2 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings ThermalResistance2 MOTOR_TEMPMODEL_RES2 1213 Current- and speed-based Fourth-order thermal network with couplings Induction Motor Temperature model Current- and speed-based Calculation method Thermal capacity 2 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings ThermalCapacity2 MOTOR_TEMPMODEL_CAP2 1214 Current- and speed-based Fourth-order thermal network with couplings Induction Motor Temperature model Current- and speed-based Calculation method Thermal resistance 3 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings ThermalResistance3 MOTOR_TEMPMODEL_RES3 1653 Current- and speed-based Fourth-order thermal network with couplings Induction Motor Temperature model Current- and speed-based Calculation method Stator thermal loss 1 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings StatorThermalLoss1 MOTOR_TEMPMODEL_LOSS1_W 1654 Current- and speed-based Fourth-order thermal network with couplings Induction Motor Temperature model Current- and speed-based Calculation method Stator thermal loss 2 Motor PowerRatingPlate TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings StatorThermalLoss2 MOTOR_TEMPMODEL_LOSS2_W 1655 Current- and speed-based Fourth-order thermal network with couplings Induction Motor Temperature model Current- and speed-based Reference temperature Current- and speed-based Induction Brake Nominal current Brake Used NominalCurrent MOTOR_BRAKE_CURR_RATED 42 Induction Brake Nominal torque Brake Used NominalTorque MOTOR_BRAKE_TORQ_RATED 43 Induction Brake Activation delay Brake Used ActivationDelay MOTOR_BRAKE_ON_TIME 44 Induction Brake Release delay Brake Used ReleaseDelay MOTOR_BRAKE_OFF_TIME 45 Induction Brake Moment of inertia Brake Used MomentOfInertia MOTOR_BRAKE_INERTIA Induction Brake Control mode Brake Used ControlMode Voltage controlled Induction Brake Control mode Release voltage Brake Used ControlMode VoltageControlled ReleaseVoltage MOTOR_BRAKE_VOLT_REL 1504 Voltage controlled Induction Brake Control mode Hold voltage Brake Used ControlMode VoltageControlled HoldVoltage MOTOR_BRAKE_VOLT_HOLD 1505 Voltage controlled Induction Brake Limits Maximum voltage Brake Used Limits Used MaximumVoltage MOTOR_BRAKE_VOLT_MAX 1506 Voltage controlled Induction Encoder Proof of fatigue strength MOTOR_ENCOD_ATTR 652 Induction Encoder Moment of inertia Encoder Used MomentOfInertia MOTOR_ENCOD_INERTIA Induction Encoder Temperature sensor Limit temperature Encoder Used TemperatureSensor Used LimitTemperature MOTOR_ENCOD_TEMP_LIM 1209 Induction Gearbox Gear ratio input Gearbox Used GearRatio Only one value in code Induction Gearbox Gear ratio output Gearbox Used GearRatio Only one value in code Induction Gearbox Maximum input speed Gearbox Used MaximumInputSpeed MOTORGEAR_SPEED_MAX 1695 Induction Gearbox Nominal output torque Gearbox Used NominalOutputTorque MOTORGEAR_TORQ_NOM 1693 Induction Gearbox Peak output torque Gearbox Used PeakOutputTorque MOTORGEAR_TORQ_MAX 1694 Induction Gearbox Moment of inertia Gearbox Used MomentOfInertia MOTORGEAR_INERTIA","title":"Conversion table for Induction motors"},{"location":"refs/refs_motor_conv_sync.html","text":"Conversion table for synchronous motors The conversion table was created to the best of our knowledge but there is no guaranty that it is 100% correct. Please double check critical values in the Automation Studio help before using them. If you find any errors or have any suggestions please create an issue on github. The table uses the following notation: The configuration column shows the Automation Studio configuration. Each branch in the tree is presented as a list. For example the value shown in the left picture is written as: Synchronous Motor Number of pole pairs The structure column shows the same value in code. Each element of the structure is presented as a list. For example the value shown in the left picture is written as: Motor Default NumberOfPolePairs Configuration name Structure name Constant Par ID Note Synchronous Motor Number of pole pairs Motor Default NumberOfPolePairs MOTOR_POLEPAIRS 47 Synchronous Motor Nominal speed Motor Default NominalSpeed MOTOR_SPEED_RATED 50 Synchronous Motor Maximum speed Motor Default MaximumSpeed MOTOR_SPEED_MAX 51 Synchronous Motor Nominal voltage Motor Default NominalVoltage MOTOR_VOLTAGE_RATED 48 Synchronous Motor Nominal current Motor Default NominalCurrent MOTOR_CURR_RATED 57 Synchronous Motor Stall current Motor Default StallCurrent MOTOR_CURR_STALL 56 Synchronous Motor Peak current Motor Default PeakCurrent MOTOR_CURR_MAX 58 Synchronous Motor Nominal torque Motor Default NominalTorque MOTOR_TORQ_RATED 53 Synchronous Motor Stall torque Motor Default StallTorque MOTOR_TORQ_STALL 52 Synchronous Motor Peak torque Motor Default PeakTorque MOTOR_TORQ_MAX 54 Synchronous Motor Voltage constant Motor Default VoltageConstant MOTOR_VOLTAGE_CONST 49 Synchronous Motor Torque constant Motor Default TorqueConstant MOTOR_TORQ_CONST 55 Synchronous Motor Stator resistance Motor Default StatorResistance MOTOR_STATOR_RESISTANCE 60 Synchronous Motor Stator inductance Motor Default StatorInductance MOTOR_STATOR_INDUCTANCE 61 Value is now in mH Synchronous Motor Moment of inertia Motor Default MomentOfInertia MOTOR_INERTIA 62 Value is now in kgcm^2 Synchronous Motor Nominal ambient temperature Motor Default NominalAmbientTemperature MOTOR_AMB_TEMP_RATED 865 Synchronous Motor Voltage limitation Maximum DC bus voltage Motor Default MaximumDCBusVoltage MOTOR_UDC_MAX 1641 Synchronous Motor Encoder mounting Angle; Commutation offset Motor Default EncoderMounting Angle UserDefined CommutationOffset MOTOR_COMMUT_OFFSET 63 Synchronous Motor Encoder mounting Angle Automatic identification Motor Default EncoderMounting Angle Undefined AutomaticIdentification Saturation PhasingCurrent PHASING_CURR 275 Synchronous Motor Encoder mounting Angle Automatic identification Motor Default EncoderMounting Angle Undefined AutomaticIdentification Dither PhasingCurrent PHASING_CURR 275 Synchronous Motor Encoder mounting Angle Automatic identification Motor Default EncoderMounting Angle Undefined AutomaticIdentification Dither PhasingTime PHASING_TIME 874 Synchronous Motor Temperature sensor Limit temperature Motor Default TemperatureSensor Thermistor LimitTemperature MOTOR_TEMPSENS_LIM 1216 Thermistor Synchronous Motor Temperature sensor Temperature sensor interface Motor Default TemperatureSensor Thermistor TemperatureSensorInterface Thermistor Synchronous Motor Temperature sensor ResistanceR0 Motor Default TemperatureSensor Thermistor ResistanceR0 MOTOR_TEMPSENS_PAR1 64 Thermistor Synchronous Motor Temperature sensor ResistanceR7 Motor Default TemperatureSensor Thermistor ResistanceR7 MOTOR_TEMPSENS_PAR2 65 Thermistor Synchronous Motor Temperature sensor TemperatureT0 Motor Default TemperatureSensor Thermistor TemperatureT0 MOTOR_TEMPSENS_PAR3 66 Thermistor Synchronous Motor Temperature sensor TemperatureT1 Motor Default TemperatureSensor Thermistor TemperatureT1 MOTOR_TEMPSENS_PAR4 67 Thermistor Synchronous Motor Temperature sensor TemperatureT2 Motor Default TemperatureSensor Thermistor TemperatureT2 MOTOR_TEMPSENS_PAR5 68 Thermistor Synchronous Motor Temperature sensor TemperatureT3 Motor Default TemperatureSensor Thermistor TemperatureT3 MOTOR_TEMPSENS_PAR6 69 Thermistor Synchronous Motor Temperature sensor TemperatureT4 Motor Default TemperatureSensor Thermistor TemperatureT4 MOTOR_TEMPSENS_PAR7 70 Thermistor Synchronous Motor Temperature sensor TemperatureT5 Motor Default TemperatureSensor Thermistor TemperatureT5 MOTOR_TEMPSENS_PAR8 71 Thermistor Synchronous Motor Temperature sensor TemperatureT6 Motor Default TemperatureSensor Thermistor TemperatureT6 MOTOR_TEMPSENS_PAR9 72 Thermistor Synchronous Motor Temperature sensor TemperatureT7 Motor Default TemperatureSensor Thermistor TemperatureT7 MOTOR_TEMPSENS_PAR10 73 Thermistor Synchronous Motor Temperature sensor Temperature sensor interface Motor Default TemperatureSensor Thermistor TemperatureSensorInterface Switching PTC thermistor Synchronous Motor Temperature sensor Nominal response resistance Motor Default TemperatureSensor SwitchingPTCThermistor NominalResponseTemperature MOTOR_TEMPSENS_PAR1 64 Switching PTC thermistor Synchronous Motor Temperature sensor Minimum resistance Motor Default TemperatureSensor SwitchingPTCThermistor MinimumResistance MOTOR_TEMPSENS_PAR2 65 Switching PTC thermistor Synchronous Motor Temperature sensor TemperaNominal response temperature Motor Default TemperatureSensor SwitchingPTCThermistor NominalResponseTemperature MOTOR_TEMPSENS_PAR3 66 Switching PTC thermistor Synchronous Motor Temperature sensor Temperature sensor interface Motor Default TemperatureSensor Thermoswitches TemperatureSensorInterface Thermoswitches Synchronous Motor Temperature sensor Nominal response resistance Motor Default TemperatureSensor Thermoswitches NominalResponseTemperature MOTOR_TEMPSENS_PAR1 64 Thermoswitches Synchronous Motor Temperature sensor Minimum resistance Motor Default TemperatureSensor Thermoswitches SwitchingStateOnOvertemperature MOTOR_TEMPSENS_PAR10 73 Thermoswitches Synchronous Motor Temperature model Current-based Limit temperature Motor Default TemperatureModel CurrentBased LimitTemperature MOTOR_WIND_TEMP_MAX 74 Current-based Synchronous Motor Temperature model Current-based Winding cross section Motor Default TemperatureModel CurrentBased WindingCrossSection MOTOR_WIND_CROSS_SECT 59 Current-based Synchronous Motor Temperature model Current-based Thermal tripping time Motor Default TemperatureModel CurrentBased ThermalTrippingTime PIDENT_THERM_TRIP_TIME 1283 Current-based Synchronous Motor Temperature model Current-based Thermal time constant Motor Default TemperatureModel CurrentBased ThermalTimeConstant MOTOR_TAU_THERM 849 Current-based Synchronous Motor Temperature model Current- and speed-based Limit temperature Motor Default TemperatureModel CurrentAndSpeedBased LimitTemperature MOTOR_WIND_TEMP_MAX 74 Current- and speed-based Synchronous Motor Temperature model Current- and speed-based Calculation method Winding cross section Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod SecondOrderThermalNetwork WindingCrossSection MOTOR_WIND_CROSS_SECT 74 Current- and speed-based Second-order thermal network Synchronous Motor Temperature model Current- and speed-based Calculation method Thermal tripping time Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod SecondOrderThermalNetwork CalculationMethod SecondOrderThermalNetwork ThermalTrippingTime PIDENT_THERM_TRIP_TIME 1283 Current- and speed-based Second-order thermal network Synchronous Motor Temperature model Current- and speed-based Calculation method Thermal time constant Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod SecondOrderThermalNetwork ThermalTimeConstant MOTOR_TAU_THERM 849 Current- and speed-based Second-order thermal network Synchronous Motor Temperature model Current- and speed-based Calculation method Thermal resistance 1 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderThermalNetwork ThermalResistance1 MOTOR_TEMPMODEL_RES1 1211 Current- and speed-based Fourth-order thermal network Synchronous Motor Temperature model Current- and speed-based Calculation method Thermal capacity 1 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderThermalNetwork ThermalCapacity1 MOTOR_TEMPMODEL_CAP1 1212 Current- and speed-based Fourth-order thermal network Synchronous Motor Temperature model Current- and speed-based Calculation method Thermal resistance 2 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderThermalNetwork ThermalResistance2 MOTOR_TEMPMODEL_RES2 1213 Current- and speed-based Fourth-order thermal network Synchronous Motor Temperature model Current- and speed-based Calculation method Thermal capacity 2 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderThermalNetwork ThermalCapacity2 MOTOR_TEMPMODEL_CAP2 1214 Current- and speed-based Fourth-order thermal network Synchronous Motor Temperature model Current- and speed-based Calculation method Stator thermal loss 1 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderThermalNetwork StatorThermalLoss1 MOTOR_TEMPMODEL_LOSS1 1489 Current- and speed-based Fourth-order thermal network Synchronous Motor Temperature model Current- and speed-based Calculation method Stator thermal loss 2 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderThermalNetwork StatorThermalLoss2 MOTOR_TEMPMODEL_LOSS2 1489 Current- and speed-based Fourth-order thermal network Synchronous Motor Temperature model Current- and speed-based Calculation method Thermal resistance 1 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings ThermalResistance1 MOTOR_TEMPMODEL_RES1 1211 Current- and speed-based Fourth-order thermal network with couplings Synchronous Motor Temperature model Current- and speed-based Calculation method Thermal capacity 1 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings ThermalCapacity1 MOTOR_TEMPMODEL_CAP1 1212 Current- and speed-based Fourth-order thermal network with couplings Synchronous Motor Temperature model Current- and speed-based Calculation method Thermal resistance 2 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings ThermalResistance2 MOTOR_TEMPMODEL_RES2 1213 Current- and speed-based Fourth-order thermal network with couplings Synchronous Motor Temperature model Current- and speed-based Calculation method Thermal capacity 2 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings ThermalCapacity2 MOTOR_TEMPMODEL_CAP2 1214 Current- and speed-based Fourth-order thermal network with couplings Synchronous Motor Temperature model Current- and speed-based Calculation method Thermal resistance 3 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings ThermalResistance3 MOTOR_TEMPMODEL_RES3 1653 Current- and speed-based Fourth-order thermal network with couplings Synchronous Motor Temperature model Current- and speed-based Calculation method Stator thermal loss 1 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings StatorThermalLoss1 MOTOR_TEMPMODEL_LOSS1_W 1654 Current- and speed-based Fourth-order thermal network with couplings Synchronous Motor Temperature model Current- and speed-based Calculation method Stator thermal loss 2 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings StatorThermalLoss2 MOTOR_TEMPMODEL_LOSS2_W 1655 Current- and speed-based Fourth-order thermal network with couplings Synchronous Brake Nominal current Brake Used NominalCurrent MOTOR_BRAKE_CURR_RATED 42 Synchronous Brake Nominal torque Brake Used NominalTorque MOTOR_BRAKE_TORQ_RATED 43 Synchronous Brake Activation delay Brake Used ActivationDelay MOTOR_BRAKE_ON_TIME 44 Synchronous Brake Release delay Brake Used ReleaseDelay MOTOR_BRAKE_OFF_TIME 45 Synchronous Brake Moment of inertia Brake Used MomentOfInertia MOTOR_BRAKE_INERTIA Synchronous Brake Control mode Brake Used ControlMode Voltage controlled Synchronous Brake Control mode Release voltage Brake Used ControlMode VoltageControlled ReleaseVoltage MOTOR_BRAKE_VOLT_REL 1504 Voltage controlled Synchronous Brake Control mode Hold voltage Brake Used ControlMode VoltageControlled HoldVoltage MOTOR_BRAKE_VOLT_HOLD 1505 Voltage controlled Synchronous Brake Limits Maximum voltage Brake Used Limits Used MaximumVoltage MOTOR_BRAKE_VOLT_MAX 1506 Voltage controlled Synchronous Encoder Proof of fatigue strength MOTOR_ENCOD_ATTR 652 Synchronous Encoder Moment of inertia Encoder Used MomentOfInertia MOTOR_ENCOD_INERTIA Synchronous Encoder Temperature sensor Limit temperature Encoder Used TemperatureSensor Used LimitTemperature MOTOR_ENCOD_TEMP_LIM 1209 Synchronous Gearbox Gear ratio input Gearbox Used GearRatio Only one value in code Synchronous Gearbox Gear ratio output Gearbox Used GearRatio Only one value in code Synchronous Gearbox Maximum input speed Gearbox Used MaximumInputSpeed MOTORGEAR_SPEED_MAX 1695 Synchronous Gearbox Nominal output torque Gearbox Used NominalOutputTorque MOTORGEAR_TORQ_NOM 1693 Synchronous Gearbox Peak output torque Gearbox Used PeakOutputTorque MOTORGEAR_TORQ_MAX 1694 Synchronous Gearbox Moment of inertia Gearbox Used MomentOfInertia MOTORGEAR_INERTIA","title":"Synchronous motor table conversion"},{"location":"refs/refs_motor_conv_sync.html#conversion-table-for-synchronous-motors","text":"The conversion table was created to the best of our knowledge but there is no guaranty that it is 100% correct. Please double check critical values in the Automation Studio help before using them. If you find any errors or have any suggestions please create an issue on github. The table uses the following notation: The configuration column shows the Automation Studio configuration. Each branch in the tree is presented as a list. For example the value shown in the left picture is written as: Synchronous Motor Number of pole pairs The structure column shows the same value in code. Each element of the structure is presented as a list. For example the value shown in the left picture is written as: Motor Default NumberOfPolePairs Configuration name Structure name Constant Par ID Note Synchronous Motor Number of pole pairs Motor Default NumberOfPolePairs MOTOR_POLEPAIRS 47 Synchronous Motor Nominal speed Motor Default NominalSpeed MOTOR_SPEED_RATED 50 Synchronous Motor Maximum speed Motor Default MaximumSpeed MOTOR_SPEED_MAX 51 Synchronous Motor Nominal voltage Motor Default NominalVoltage MOTOR_VOLTAGE_RATED 48 Synchronous Motor Nominal current Motor Default NominalCurrent MOTOR_CURR_RATED 57 Synchronous Motor Stall current Motor Default StallCurrent MOTOR_CURR_STALL 56 Synchronous Motor Peak current Motor Default PeakCurrent MOTOR_CURR_MAX 58 Synchronous Motor Nominal torque Motor Default NominalTorque MOTOR_TORQ_RATED 53 Synchronous Motor Stall torque Motor Default StallTorque MOTOR_TORQ_STALL 52 Synchronous Motor Peak torque Motor Default PeakTorque MOTOR_TORQ_MAX 54 Synchronous Motor Voltage constant Motor Default VoltageConstant MOTOR_VOLTAGE_CONST 49 Synchronous Motor Torque constant Motor Default TorqueConstant MOTOR_TORQ_CONST 55 Synchronous Motor Stator resistance Motor Default StatorResistance MOTOR_STATOR_RESISTANCE 60 Synchronous Motor Stator inductance Motor Default StatorInductance MOTOR_STATOR_INDUCTANCE 61 Value is now in mH Synchronous Motor Moment of inertia Motor Default MomentOfInertia MOTOR_INERTIA 62 Value is now in kgcm^2 Synchronous Motor Nominal ambient temperature Motor Default NominalAmbientTemperature MOTOR_AMB_TEMP_RATED 865 Synchronous Motor Voltage limitation Maximum DC bus voltage Motor Default MaximumDCBusVoltage MOTOR_UDC_MAX 1641 Synchronous Motor Encoder mounting Angle; Commutation offset Motor Default EncoderMounting Angle UserDefined CommutationOffset MOTOR_COMMUT_OFFSET 63 Synchronous Motor Encoder mounting Angle Automatic identification Motor Default EncoderMounting Angle Undefined AutomaticIdentification Saturation PhasingCurrent PHASING_CURR 275 Synchronous Motor Encoder mounting Angle Automatic identification Motor Default EncoderMounting Angle Undefined AutomaticIdentification Dither PhasingCurrent PHASING_CURR 275 Synchronous Motor Encoder mounting Angle Automatic identification Motor Default EncoderMounting Angle Undefined AutomaticIdentification Dither PhasingTime PHASING_TIME 874 Synchronous Motor Temperature sensor Limit temperature Motor Default TemperatureSensor Thermistor LimitTemperature MOTOR_TEMPSENS_LIM 1216 Thermistor Synchronous Motor Temperature sensor Temperature sensor interface Motor Default TemperatureSensor Thermistor TemperatureSensorInterface Thermistor Synchronous Motor Temperature sensor ResistanceR0 Motor Default TemperatureSensor Thermistor ResistanceR0 MOTOR_TEMPSENS_PAR1 64 Thermistor Synchronous Motor Temperature sensor ResistanceR7 Motor Default TemperatureSensor Thermistor ResistanceR7 MOTOR_TEMPSENS_PAR2 65 Thermistor Synchronous Motor Temperature sensor TemperatureT0 Motor Default TemperatureSensor Thermistor TemperatureT0 MOTOR_TEMPSENS_PAR3 66 Thermistor Synchronous Motor Temperature sensor TemperatureT1 Motor Default TemperatureSensor Thermistor TemperatureT1 MOTOR_TEMPSENS_PAR4 67 Thermistor Synchronous Motor Temperature sensor TemperatureT2 Motor Default TemperatureSensor Thermistor TemperatureT2 MOTOR_TEMPSENS_PAR5 68 Thermistor Synchronous Motor Temperature sensor TemperatureT3 Motor Default TemperatureSensor Thermistor TemperatureT3 MOTOR_TEMPSENS_PAR6 69 Thermistor Synchronous Motor Temperature sensor TemperatureT4 Motor Default TemperatureSensor Thermistor TemperatureT4 MOTOR_TEMPSENS_PAR7 70 Thermistor Synchronous Motor Temperature sensor TemperatureT5 Motor Default TemperatureSensor Thermistor TemperatureT5 MOTOR_TEMPSENS_PAR8 71 Thermistor Synchronous Motor Temperature sensor TemperatureT6 Motor Default TemperatureSensor Thermistor TemperatureT6 MOTOR_TEMPSENS_PAR9 72 Thermistor Synchronous Motor Temperature sensor TemperatureT7 Motor Default TemperatureSensor Thermistor TemperatureT7 MOTOR_TEMPSENS_PAR10 73 Thermistor Synchronous Motor Temperature sensor Temperature sensor interface Motor Default TemperatureSensor Thermistor TemperatureSensorInterface Switching PTC thermistor Synchronous Motor Temperature sensor Nominal response resistance Motor Default TemperatureSensor SwitchingPTCThermistor NominalResponseTemperature MOTOR_TEMPSENS_PAR1 64 Switching PTC thermistor Synchronous Motor Temperature sensor Minimum resistance Motor Default TemperatureSensor SwitchingPTCThermistor MinimumResistance MOTOR_TEMPSENS_PAR2 65 Switching PTC thermistor Synchronous Motor Temperature sensor TemperaNominal response temperature Motor Default TemperatureSensor SwitchingPTCThermistor NominalResponseTemperature MOTOR_TEMPSENS_PAR3 66 Switching PTC thermistor Synchronous Motor Temperature sensor Temperature sensor interface Motor Default TemperatureSensor Thermoswitches TemperatureSensorInterface Thermoswitches Synchronous Motor Temperature sensor Nominal response resistance Motor Default TemperatureSensor Thermoswitches NominalResponseTemperature MOTOR_TEMPSENS_PAR1 64 Thermoswitches Synchronous Motor Temperature sensor Minimum resistance Motor Default TemperatureSensor Thermoswitches SwitchingStateOnOvertemperature MOTOR_TEMPSENS_PAR10 73 Thermoswitches Synchronous Motor Temperature model Current-based Limit temperature Motor Default TemperatureModel CurrentBased LimitTemperature MOTOR_WIND_TEMP_MAX 74 Current-based Synchronous Motor Temperature model Current-based Winding cross section Motor Default TemperatureModel CurrentBased WindingCrossSection MOTOR_WIND_CROSS_SECT 59 Current-based Synchronous Motor Temperature model Current-based Thermal tripping time Motor Default TemperatureModel CurrentBased ThermalTrippingTime PIDENT_THERM_TRIP_TIME 1283 Current-based Synchronous Motor Temperature model Current-based Thermal time constant Motor Default TemperatureModel CurrentBased ThermalTimeConstant MOTOR_TAU_THERM 849 Current-based Synchronous Motor Temperature model Current- and speed-based Limit temperature Motor Default TemperatureModel CurrentAndSpeedBased LimitTemperature MOTOR_WIND_TEMP_MAX 74 Current- and speed-based Synchronous Motor Temperature model Current- and speed-based Calculation method Winding cross section Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod SecondOrderThermalNetwork WindingCrossSection MOTOR_WIND_CROSS_SECT 74 Current- and speed-based Second-order thermal network Synchronous Motor Temperature model Current- and speed-based Calculation method Thermal tripping time Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod SecondOrderThermalNetwork CalculationMethod SecondOrderThermalNetwork ThermalTrippingTime PIDENT_THERM_TRIP_TIME 1283 Current- and speed-based Second-order thermal network Synchronous Motor Temperature model Current- and speed-based Calculation method Thermal time constant Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod SecondOrderThermalNetwork ThermalTimeConstant MOTOR_TAU_THERM 849 Current- and speed-based Second-order thermal network Synchronous Motor Temperature model Current- and speed-based Calculation method Thermal resistance 1 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderThermalNetwork ThermalResistance1 MOTOR_TEMPMODEL_RES1 1211 Current- and speed-based Fourth-order thermal network Synchronous Motor Temperature model Current- and speed-based Calculation method Thermal capacity 1 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderThermalNetwork ThermalCapacity1 MOTOR_TEMPMODEL_CAP1 1212 Current- and speed-based Fourth-order thermal network Synchronous Motor Temperature model Current- and speed-based Calculation method Thermal resistance 2 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderThermalNetwork ThermalResistance2 MOTOR_TEMPMODEL_RES2 1213 Current- and speed-based Fourth-order thermal network Synchronous Motor Temperature model Current- and speed-based Calculation method Thermal capacity 2 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderThermalNetwork ThermalCapacity2 MOTOR_TEMPMODEL_CAP2 1214 Current- and speed-based Fourth-order thermal network Synchronous Motor Temperature model Current- and speed-based Calculation method Stator thermal loss 1 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderThermalNetwork StatorThermalLoss1 MOTOR_TEMPMODEL_LOSS1 1489 Current- and speed-based Fourth-order thermal network Synchronous Motor Temperature model Current- and speed-based Calculation method Stator thermal loss 2 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderThermalNetwork StatorThermalLoss2 MOTOR_TEMPMODEL_LOSS2 1489 Current- and speed-based Fourth-order thermal network Synchronous Motor Temperature model Current- and speed-based Calculation method Thermal resistance 1 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings ThermalResistance1 MOTOR_TEMPMODEL_RES1 1211 Current- and speed-based Fourth-order thermal network with couplings Synchronous Motor Temperature model Current- and speed-based Calculation method Thermal capacity 1 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings ThermalCapacity1 MOTOR_TEMPMODEL_CAP1 1212 Current- and speed-based Fourth-order thermal network with couplings Synchronous Motor Temperature model Current- and speed-based Calculation method Thermal resistance 2 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings ThermalResistance2 MOTOR_TEMPMODEL_RES2 1213 Current- and speed-based Fourth-order thermal network with couplings Synchronous Motor Temperature model Current- and speed-based Calculation method Thermal capacity 2 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings ThermalCapacity2 MOTOR_TEMPMODEL_CAP2 1214 Current- and speed-based Fourth-order thermal network with couplings Synchronous Motor Temperature model Current- and speed-based Calculation method Thermal resistance 3 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings ThermalResistance3 MOTOR_TEMPMODEL_RES3 1653 Current- and speed-based Fourth-order thermal network with couplings Synchronous Motor Temperature model Current- and speed-based Calculation method Stator thermal loss 1 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings StatorThermalLoss1 MOTOR_TEMPMODEL_LOSS1_W 1654 Current- and speed-based Fourth-order thermal network with couplings Synchronous Motor Temperature model Current- and speed-based Calculation method Stator thermal loss 2 Motor Default TemperatureModel CurrentAndSpeedBased CalculationMethod FourthOrderWithCouplings StatorThermalLoss2 MOTOR_TEMPMODEL_LOSS2_W 1655 Current- and speed-based Fourth-order thermal network with couplings Synchronous Brake Nominal current Brake Used NominalCurrent MOTOR_BRAKE_CURR_RATED 42 Synchronous Brake Nominal torque Brake Used NominalTorque MOTOR_BRAKE_TORQ_RATED 43 Synchronous Brake Activation delay Brake Used ActivationDelay MOTOR_BRAKE_ON_TIME 44 Synchronous Brake Release delay Brake Used ReleaseDelay MOTOR_BRAKE_OFF_TIME 45 Synchronous Brake Moment of inertia Brake Used MomentOfInertia MOTOR_BRAKE_INERTIA Synchronous Brake Control mode Brake Used ControlMode Voltage controlled Synchronous Brake Control mode Release voltage Brake Used ControlMode VoltageControlled ReleaseVoltage MOTOR_BRAKE_VOLT_REL 1504 Voltage controlled Synchronous Brake Control mode Hold voltage Brake Used ControlMode VoltageControlled HoldVoltage MOTOR_BRAKE_VOLT_HOLD 1505 Voltage controlled Synchronous Brake Limits Maximum voltage Brake Used Limits Used MaximumVoltage MOTOR_BRAKE_VOLT_MAX 1506 Voltage controlled Synchronous Encoder Proof of fatigue strength MOTOR_ENCOD_ATTR 652 Synchronous Encoder Moment of inertia Encoder Used MomentOfInertia MOTOR_ENCOD_INERTIA Synchronous Encoder Temperature sensor Limit temperature Encoder Used TemperatureSensor Used LimitTemperature MOTOR_ENCOD_TEMP_LIM 1209 Synchronous Gearbox Gear ratio input Gearbox Used GearRatio Only one value in code Synchronous Gearbox Gear ratio output Gearbox Used GearRatio Only one value in code Synchronous Gearbox Maximum input speed Gearbox Used MaximumInputSpeed MOTORGEAR_SPEED_MAX 1695 Synchronous Gearbox Nominal output torque Gearbox Used NominalOutputTorque MOTORGEAR_TORQ_NOM 1693 Synchronous Gearbox Peak output torque Gearbox Used PeakOutputTorque MOTORGEAR_TORQ_MAX 1694 Synchronous Gearbox Moment of inertia Gearbox Used MomentOfInertia MOTORGEAR_INERTIA","title":"Conversion table for synchronous motors"}]}